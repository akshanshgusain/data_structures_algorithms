17. Heapify
01. Implement a MaxHeap/MinHeap using arrays and recursion.
02. Sort an Array using heap. (HeapSort).

03. Maximum of all sub-arrays of size k.
04. kth-largest element in an array.
05. kth smallest and largest element in an unsorted array.
06. Merge “K” sorted arrays.<T>
07. Merge 2 Binary Max Heaps.
08. Kth-largest sum continuous sub-arrays.
09. Reorganize String. <GG>
12. Check if a Binary Tree is Heap.
13. Connect “n” ropes with minimum cost.
15. Convert Min-Heap to Max-Heap.
16. Minimum sum of two numbers formed from digits of an array.


10. Smallest range in “K” Lists. <T>
11. Median in a stream of Integers. <GG> <T>
14. Convert BST to Min-Heap.<T>




A Heap is a special Tree-based val structure in which the tree is a complete binary tree. Generally, Heaps can be of
two types:
    1. Max-Heap: In a Max-Heap the key present at the root node must be greatest among the keys present at all of it’s
     children. The same property must be recursively true for all sub-trees in that Binary Tree.
    2. Min-Heap: In a Min-Heap the key present at the root node must be minimum among the keys present at all of it’s
     children. The same property must be recursively true for all sub-trees in that Binary Tree.

-- Binary Heap
   A Binary Heap is a Binary Tree with following properties:

   1. It’s a complete tree (All levels are completely filled except possibly the last level and the last level has all
      keys as left as possible). This property of Binary Heap makes them suitable to be stored in an array.

   2. A Binary Heap is either Min Heap or Max Heap. In a Min Binary Heap, the key at root must be minimum among all
      keys present in Binary Heap. The same property must be recursively true for all nodes in Binary Tree. Max Binary
      Heap is similar to MinHeap.

   3. If the Heap size is N, the range of leaves nodes will from floor(n/2) to (n-1).

   4. Range of internal nodes will from 0 to floor(n/2) - 1.



-- How is Binary Heap represented?
    A Binary Heap is a Complete Binary Tree. A binary heap is typically represented as an array.
    -   The root element will be at Arr[0].
    -   Arr[(i-1)/2]	Returns the parent node.
    -   Arr[(2*i)+1]	Returns the left child node.
    -   Arr[(2*i)+2]	Returns the right child node
    -   The parent nodes are located at indexes 0 to (n / 2) - 1


-- Is Binary Tree a Heap?

    Given a binary tree, we need to check it has heap property or not, Binary tree need to fulfill the following two
    conditions for being a heap –

    1. It should be a complete tree (i.e. all levels except last should be full).
    2. Every node’s value should be greater than or equal to its child node (considering max-heap).